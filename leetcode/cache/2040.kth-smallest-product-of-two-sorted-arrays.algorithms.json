{"id":2150,"fid":"2040","name":"两个有序数组的第 K 小乘积","slug":"kth-smallest-product-of-two-sorted-arrays","link":"https://leetcode.cn/problems/kth-smallest-product-of-two-sorted-arrays/description/","percent":35.91204283923892,"level":"Hard","category":"algorithms","en_name":"Kth Smallest Product of Two Sorted Arrays","cn_name":"两个有序数组的第 K 小乘积","totalAC":"4.9K","totalSubmit":"11.1K","likes":66,"dislikes":0,"desc":"给你两个 <strong>从小到大排好序</strong>&nbsp;且下标从 <strong>0</strong>&nbsp;开始的整数数组&nbsp;<code>nums1</code> 和&nbsp;<code>nums2</code>&nbsp;以及一个整数&nbsp;<code>k</code>&nbsp;，请你返回第<em>&nbsp;</em><code>k</code>&nbsp;（从 <strong>1</strong>&nbsp;开始编号）小的&nbsp;<code>nums1[i] * nums2[j]</code><em>&nbsp;</em>的乘积，其中<em>&nbsp;</em><code>0 &lt;= i &lt; nums1.length</code><em> </em>且<em> </em><code>0 &lt;= j &lt; nums2.length</code>&nbsp;。\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>nums1 = [2,5], nums2 = [3,4], k = 2\n<b>输出：</b>8\n<b>解释：</b>第 2 小的乘积计算如下：\n- nums1[0] * nums2[0] = 2 * 3 = 6\n- nums1[0] * nums2[1] = 2 * 4 = 8\n第 2 小的乘积为 8 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>nums1 = [-4,-2,0,3], nums2 = [2,4], k = 6\n<b>输出：</b>0\n<strong>解释：</strong>第 6 小的乘积计算如下：\n- nums1[0] * nums2[1] = (-4) * 4 = -16\n- nums1[0] * nums2[0] = (-4) * 2 = -8\n- nums1[1] * nums2[1] = (-2) * 4 = -8\n- nums1[1] * nums2[0] = (-2) * 2 = -4\n- nums1[2] * nums2[0] = 0 * 2 = 0\n- nums1[2] * nums2[1] = 0 * 4 = 0\n第 6 小的乘积为 0 。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><b>输入：</b>nums1 = [-2,-1,0,1,2], nums2 = [-3,-1,2,4,5], k = 3\n<b>输出：</b>-6\n<b>解释：</b>第 3 小的乘积计算如下：\n- nums1[0] * nums2[4] = (-2) * 5 = -10\n- nums1[0] * nums2[3] = (-2) * 4 = -8\n- nums1[4] * nums2[0] = 2 * (-3) = -6\n第 3 小的乘积为 -6 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums1[i], nums2[j] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums1.length * nums2.length</code></li>\n\t<li><code>nums1</code> 和&nbsp;<code>nums2</code>&nbsp;都是从小到大排好序的。</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    long long kthSmallestProduct(vector<int>& nums1, vector<int>& nums2, long long k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public long kthSmallestProduct(int[] nums1, int[] nums2, long k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def kthSmallestProduct(self, nums1, nums2, k):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def kthSmallestProduct(self, nums1: List[int], nums2: List[int], k: int) -> int:\n        "},{"value":"c","text":"C","defaultCode":"long long kthSmallestProduct(int* nums1, int nums1Size, int* nums2, int nums2Size, long long k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public long KthSmallestProduct(int[] nums1, int[] nums2, long k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @param {number} k\n * @return {number}\n */\nvar kthSmallestProduct = function(nums1, nums2, k) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function kthSmallestProduct(nums1: number[], nums2: number[], k: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @param Integer $k\n     * @return Integer\n     */\n    function kthSmallestProduct($nums1, $nums2, $k) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func kthSmallestProduct(_ nums1: [Int], _ nums2: [Int], _ k: Int) -> Int {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun kthSmallestProduct(nums1: IntArray, nums2: IntArray, k: Long): Long {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int kthSmallestProduct(List<int> nums1, List<int> nums2, int k) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func kthSmallestProduct(nums1 []int, nums2 []int, k int64) int64 {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums1\n# @param {Integer[]} nums2\n# @param {Integer} k\n# @return {Integer}\ndef kth_smallest_product(nums1, nums2, k)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def kthSmallestProduct(nums1: Array[Int], nums2: Array[Int], k: Long): Long = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn kth_smallest_product(nums1: Vec<i32>, nums2: Vec<i32>, k: i64) -> i64 {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (kth-smallest-product nums1 nums2 k)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec kth_smallest_product(Nums1 :: [integer()], Nums2 :: [integer()], K :: integer()) -> integer().\nkth_smallest_product(Nums1, Nums2, K) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec kth_smallest_product(nums1 :: [integer], nums2 :: [integer], k :: integer) :: integer\n  def kth_smallest_product(nums1, nums2, k) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func kthSmallestProduct(nums1: Array<Int64>, nums2: Array<Int64>, k: Int64): Int64 {\n\n    }\n}"}],"testcase":"[2,5]\n[3,4]\n2","testable":true,"templateMeta":{"name":"kthSmallestProduct","params":[{"name":"nums1","type":"integer[]"},{"type":"integer[]","name":"nums2"},{"type":"long","name":"k"}],"return":{"type":"long"}}}